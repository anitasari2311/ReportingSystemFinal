------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------app.py--------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
@app.route('/sendFormatTemplate',  methods =  ['POST', 'GET'])
def sendFormatTemplate():
    
    kode_laporan = request.form['kodLap']
    kolom_merge = request.form['kolomMerge']
    kolom_kanan = request.form['rataKanan']
    kolom_tengah = request.form['rataTengah']

    kolom_footer1 = request.form['kolomFooter1']
    kolom_footer2 = request.form['kolomFooter2']
    posisi_footer1 = ''
    posisi_footer2 = ''

    kolomTemp = []
    posisiTemp = []
    tipeTemp = []
    lebarTemp = []

    if request.method == 'POST':

        for isiKolom in ['kolom1', 'kolom2', 'kolom3', 'kolom4', 'kolom5', 'kolom6', 'kolom7',
        'kolom8', 'kolom9', 'kolom10', 'kolom11', 'kolom12', 'kolom13', 'kolom14']:
            if(request.form[isiKolom] is not None) and (request.form[isiKolom] is not ''):
                kolomTemp.append(request.form[isiKolom])
                kolomTemp1 = json.dumps(kolomTemp)
        print(kolomTemp1)

        for isiPosisi in ['posisi1', 'posisi2', 'posisi3', 'posisi4', 'posisi5', 'posisi6', 'posisi7',
        'posisi8', 'posisi9', 'posisi10', 'posisi11', 'posisi12', 'posisi13', 'posisi14']:
            if(request.form[isiPosisi] is not None) and (request.form[isiPosisi] is not ''):
                posisiTemp.append(request.form[isiPosisi])
                posisiTemp1 = json.dumps(posisiTemp)
        print(posisiTemp1)
        
        for isiTipe in ['tipe1', 'tipe2', 'tipe3', 'tipe4', 'tipe5', 'tipe6', 'tipe7',
        'tipe8', 'tipe9', 'tipe10', 'tipe11', 'tipe12', 'tipe13', 'tipe14']:
            if (request.form[isiTipe] is not None) and (request.form[isiTipe] is not ''):
                tipeTemp.append(request.form[isiTipe])
                tipeTemp1 = json.dumps(tipeTemp)
        print(tipeTemp1)

        for isiLebar in ['lebar1', 'lebar2', 'lebar3', 'lebar4', 'lebar5', 'lebar6', 'lebar7',
        'lebar8', 'lebar9', 'lebar10', 'lebar11', 'lebar12', 'lebar13', 'lebar14']:
            if (request.form[isiLebar] is not None) and (request.form[isiLebar] is not ''):
                lebarTemp.append(request.form[isiLebar])
                lebarTemp1 = json.dumps(lebarTemp)
        print(lebarTemp1)

        for posisiFooter in ['B1', 'C1', 'D1', 'E1', 'F1', 'G1', 'H1', 'J1', 'K1', 'L1', 'M1', 'N1']:
            if request.form.get(posisiFooter) is not None:
                if posisi_footer1 == '':
                    posisi_footer1 += request.form.get(posisiFooter)
                else:
                    posisi_footer1 += ", "+request.form.get(posisiFooter)
        print(posisi_footer1)

        for posisiFooter2 in ['B2', 'C2', 'D2', 'E2', 'F2', 'G2', 'H2', 'J2', 'K2', 'L2', 'M2', 'N2']:
            if request.form.get(posisiFooter2) is not None:
                if posisi_footer2 == '':
                    posisi_footer2 += request.form.get(posisiFooter2)
                else:
                    posisi_footer2 += ", "+request.form.get(posisiFooter2)
        print(posisi_footer2)

        detailKolom = {
            'reportId' : kode_laporan,
            'mergeKolom': kolom_merge,
            'rataKanan' : kolom_kanan,
            'rataTengah' : kolom_tengah,
            'namaFooter1' : kolom_footer1,
            'namaFooter2' : kolom_footer2,
            'posisiFooter1' : posisi_footer1,
            'posisiFooter2' : posisi_footer2
        }

        detailKolom1 = json.dumps(detailKolom)

        requests.post('http://127.0.0.1:5002/saveFormatTemplate/'+detailKolom1+'/'+kolomTemp1+
            '/'+posisiTemp1+'/'+tipeTemp1+'/'+lebarTemp1)
        

        return redirect (url_for('admin'))
    return redirect (url_for('admin'))

---------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------ms2.py----------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------
    @app.route('/saveFormatTemplate/<detailKolom>/<nama>/<posisi>/<tipe>/<lebar>',  methods = ['GET', 'POST'])
    def saveFormatTemplate(detailKolom, nama, posisi, tipe, lebar):
        
        formatKolom = json.loads(detailKolom)
        namaKolom = json.loads(nama)
        posisiKolom = json.loads(posisi)
        tipeKolom = json.loads(tipe)
        lebarKolom = json.loads(lebar)


        for i in formatKolom:
            reportId = formatKolom['reportId']
            mergeKolom = formatKolom['mergeKolom']
            rataKanan = formatKolom['rataKanan']
            rataTengah = formatKolom['rataTengah']
            namaFooter1 = formatKolom['namaFooter1']
            namaFooter2 = formatKolom['namaFooter2']
            posisiFooter1 = formatKolom['posisiFooter1']
            posisiFooter2 = formatKolom['posisiFooter2']

        try:
            db = databaseCMS.db_template()
            cursor = db.cursor()

            for i in range (len(namaKolom)):
                try:

                    cursor.execute('INSERT INTO m_detailh values (%s, %s, %s, %s, %s, %s, %s, %s)', (reportId, namaKolom[i], posisiKolom[i], tipeKolom[i], lebarKolom[i], mergeKolom, rataKanan, rataTengah))                    
                    db.commit()

                except Exception as e:
                   print(e)

            if (namaFooter2 != ''):
                cursor.execute(' INSERT INTO m_detailf VALUES (%s, %s, %s, %s)', (reportId, namaFooter1, posisiFooter1, "1"))
                db.commit()

                cursor.execute(' INSERT INTO m_detailf VALUES (%s, %s, %s, %s)', (reportId, namaFooter2, posisiFooter2, "2"))
                db.commit()
            else:
                cursor.execute(' INSERT INTO m_detailf VALUES (%s, %s, %s, %s)', (reportId, namaFooter1, posisiFooter1, "1"))
                db.commit()
        except Error as e :
            print("Error while connecting file MySQL", e)
        
        finally:
        #Closing DB Connection.
            if(db.is_connected()):
                cursor.close()
                db.close()
            print("MySQL connection is closed")

-------------------------------------------------------addTemplate.html--------------------------------------------------


<html>
<head>
	<link rel="stylesheet" href="{{url_for('static', filename='style.css')}}">
	<title>ADD DETAIL TEMPLATE</title>
</head>
<body bgcolor="#F0FFF0" onload="generateForm({{jumKol}})">
	
{% if session.get('position') == 'Admin' %}

	{% extends "NAVBARPROG.html" %}
	{% set active_page = 'template' %}

{% else %}

	{% extends "NAVBARSPV.html" %}
	{% set active_page = 'template' %}

{% endif %}

{% block content %}
<br><br>

<div class="judul">
	<center>FORMAT TEMPLATE</center>
</div>

<div class="containInsert">
<form action="/sendFormatTemplate" method="POST">

	{% if detailFormatTemplate %}
		<div class ="row">
		  <div class ="col-35">
		    <label for="kodeReport">Report Code : </label>
		  </div>

		  <div class="col-55">
		        <input type="text" class = "col-10" id="kodeLaporan" name="kodLap" value="{{detailFormatTemplate[0].reportId}}" placeholder="{{detailFormatTemplate[0].reportId}}" style="width: 120px">
		  </div>
		</div>


		<div class="row">
		  <div class ="col-35">
		    <label for="periode">Period : </label>
		  </div>

		  <div class="col-55">
		    <input type="text" class = "col-10" id="periode" name="periode" value="{{detailFormatTemplate[0].reportPeriode}}">
		  </div>
		</div>

		<div class="row">
		  <div class ="col-35">
		    <label for="print">Print All : </label>
		  </div>

		  <div class="row-55">
		    <input type="text" class = "col-10" id="printAll" name="printAll" value="{{detailFormatTemplate[0].reportPrintAll}}" style="width: 120px">
		  </div>
		</div>

		<div class ="row">
		  <div class ="col-35">
		    <label for="namaReport">Report Name : </label>
		  </div>

		  <div class="col-85">
		    <input type="text" id="namaReport" name="namaReport" value="{{detailFormatTemplate[0].reportJudul}}">
		  </div>
		</div>


		<div class ="row">
		  <div class ="col-35">
		    <label for="jmlHeader">Total Header: </label>
		  </div>

		  <div class="col-55">
		    <input type="text" class = "col-10" id="jmlHeader" name="jmlHeader" value="{{detailFormatTemplate[0].reportHeader}}" style="width: 120px">
		  </div>
		</div>

		<div class="row">
		  <div class ="col-35" >
		    <label for="jmlFooter">Total Footer : </label>
		  </div>

		  <div class="col-55">
		    <input type="text" class = "col-10" id="jmlFooter" name="jmlFooter" value="{{detailFormatTemplate[0].reportFooter}}" style="width: 120px">
		  </div>
		</div>

		<div class="row">
		  <div class ="col-35">
		    <label for="jmlKolom">Total Column  : </label>
		  </div>

		  <div class="col-55">
		    <input type="number" class = "col-10" id="jmlKolom" name="jmlKolom" value="{{detailFormatTemplate[0].reportJmlTampilan}}"
		    onchange="generateForm(this.value)" onkeyup="generateForm(this.value)" style="width:120px; height: 35px;" max="25">
		  </div>
		</div>
	

	<div class="row">
		  	{% for i in range(1, 26) %}
		  		<div id="areaKolom{{i}}" style="display: inline-block;">
		  			<div style="display: inline-block; width: 200px">
			  			<b>Column {{i}}:</b>
			  			<br>
			  			<input type="text" id="kolom{{i}}" name="kolom{{i}}" style='width:200px;'/>
		  			</div>
		  			<div style="display: inline-block; width: 200px">
			  			<b>Position:</b>
			  			<br>
			  			<select name="posisi{{i}}">
			  				<option value='B6'>B6</option>
			  				<option value='B7'>B7</option>
			  				<option value='C6'>C6</option>
			  				<option value='C7'>C7</option>
			  				<option value='D6'>D6</option>
			  				<option value='D7'>D7</option>
			  				<option value='E6'>E6</option>
			  				<option value='E7'>E7</option>
			  				<option value='F6'>F6</option>
			  				<option value='F7'>F7</option>
			  				<option value='G6'>G6</option>
			  				<option value='G7'>G7</option>
			  				<option value='H6'>H6</option>
			  				<option value='H7'>H7</option>
			  				<option value='I6'>I6</option>
			  				<option value='I7'>I7</option>
			  				<option value='J6'>J6</option>
			  				<option value='J7'>J7</option>
			  				<option value='K6'>K6</option>
			  				<option value='K7'>K7</option>
			  				<option value='L6'>L6</option>
			  				<option value='L7'>L7</option>
			  				<option value='M6'>M6</option>
			  				<option value='M7'>M7</option>
			  				<option value='N6'>N6</option>
			  				<option value='N7'>N7</option>
			  			</select>
		  			</div>
	          		<div  style="display: inline-block; width: 200px">
	          			<b>Type:</b>
	          			<br>
	          			<select name="tipe{{i}}">
	          				<option value='String'>String</option>
	          				<option value='Integer'>Integer</option>
	          				<option value='Decimal'>Decimal</option>
	          				<option value='Percentage'>Percentage</option>
	          				<option value='Date'>Date</option>
	          				<option value='Time'>Time</option>
	          				<option value='Datetime'>Datetime</option>
	          			</select>
          			</div>
          			<div style="display: inline-block; width: 200px">
			  			<b>Width:</b>
			  			<br>
			  			<input type='text' id="kolom{{i}}" name="lebar{{i}}" style='width:200px;'/>
			  		</div>
		  		</div>
          	
		  	{% endfor %}
		  
		</div>
{% endif %}

		<div class="row">
			<div class="col-35">
				<label for="kolomMerge">Merge Column :</label>				
			</div>
			
			<div class="col-55">
				<input type="text" class="col-10" id="kolomMerge" name="kolomMerge">
			</div>
		</div>

		<div class="row">
		  <div class ="col-35">
		    <label for="rataKanan">Right Column  : </label>
		  </div>

		  <div class="col-55">
		    <input type="text" class = "col-10" id="rataKanan" name="rataKanan">
		  </div>
		</div>

		<div class="row">
			<div class="col-35">
				<label for="rataKiri">Center Column : </label>
			</div>
			
			<div class="col-55">
				<input type="text" class="col-10" id="rataTengah" name="rataTengah">
			</div>
		</div>

		<div class ="row">
		  <div class ="col-35">
		    <label for="footer">Footer 1 : </label>
		  </div>

		  <div class="col-55">
		    <input type="text" class = "col-10" id="kolF" name="kolomFooter1" >
		  </div>
		</div>

		<!-- CHECKBOX UNTUK LETAK FOOTER -->
		<div class ="myBox" name="checkbox1">
		  <input type="checkbox" name="B1" value="B">B
		  <input type="checkbox" name="C1" value="C">C
		  <input type="checkbox" name="D1" value="D">D
		  <input type="checkbox" name="E1" value="E">E
		  <input type="checkbox" name="F1" value="F">F
		  <input type="checkbox" name="G1" value="G">G
		  <input type="checkbox" name="H1" value="H">H
		  <input type="checkbox" name="I1" value="I">I
		  <input type="checkbox" name="J1" value="J">J
		  <input type="checkbox" name="K1" value="K">K
		  <input type="checkbox" name="L1" value="L">L
		  <input type="checkbox" name="M1" value="M">M
		  <input type="checkbox" name="N1" value="N">N
		</div>

		<div class ="row">
		  <div class ="col-35">
		    <label for="footer">Footer 2: </label>
		  </div>

		  <div class="col-55">
		    <input type="text" class = "col-10" id="kolF" name="kolomFooter2" >
		  </div>
		</div>

		<div class ="myBox" name="checkbox2">
		  <input type="checkbox" name="B2" value="B">B
		  <input type="checkbox" name="C2" value="C">C
		  <input type="checkbox" name="D2" value="D">D
		  <input type="checkbox" name="E2" value="E">E
		  <input type="checkbox" name="F2" value="F">F
		  <input type="checkbox" name="G2" value="G">G
		  <input type="checkbox" name="H2" value="H">H
		  <input type="checkbox" name="I2" value="I">I
		  <input type="checkbox" name="J2" value="J">J
		  <input type="checkbox" name="K2" value="K">K
		  <input type="checkbox" name="L2" value="L">L
		  <input type="checkbox" name="M2" value="M">M
		  <input type="checkbox" name="N2" value="N">N
		</div>

		<center>
  <div class="colBut">
<button class="submit"> SAVE </button></div>

</form>

<div class="colBut">
<form action="/admin"><button class="submitred"> CANCEL </button></form></div>
</center>

</div>
</body>
{% endblock %}

{% block script %}
<script>
      function generateForm(loop)
      {
        var fieldCount = loop;
        console.log(fieldCount);
        for (i = 1; i < 25; i++)
        {
        	var value = "areaKolom"+i.toString();
        	console.log(value);
          	var kolom  = document.getElementById(value);
          	kolom.style.display = "inline";
        
        }
        for (i = 25; i > fieldCount; i--)
        {
        	var value = "areaKolom"+i.toString();
        	console.log(value);
          	var kolom  = document.getElementById(value);
          	kolom.style.display = "none";
        }
 
      }

/*      function testtt(){
      	for (i = 5){
      		var values = "areaKolom"+i.toString();
      		console.log(values);
      		var kolom = document.getElementById(values);
      		kolom.style.display = "inline";
      	}

      }*/

      function addFields(){
            // Number of inputs to create
            var number = document.getElementById("member").value;
            // containerq <div> where dynamic content will be placed
            var containerq = document.getElementById("containerq");
            // Clear previous contents of the containerq
            while (containerq.hasChildNodes()) {
                containerq.removeChild(containerq.lastChild);
            }
            for (i=0;i<number;i++){
                // Append a node with a random text
                containerq.appendChild(document.createTextNode("Member " + (i+1)));
                // Create an <input> element, set its type and name attributes
                var input = document.createElement("input");
                input.type = "text";
                input.name = "member" + i;
                containerq.appendChild(input);
                // Append a line break 
                containerq.appendChild(document.createElement("br"));
            }
        }
    

    function test(){
    	alert('Berhasil!');
    }

    /*window.onload = test;*/

    </script>
</html>
{% endblock %}