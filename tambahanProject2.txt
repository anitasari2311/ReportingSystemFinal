======================================================ms1availableTask===================================================

<html>
        <head>
        	<title>Available Task</title>
        	<link rel="stylesheet" href="{{ url_for('static', filename='style.css') }}">
        </head>
<body bgcolor="#F0FFF0">


      {% extends "NAVBARPROG.html" %}
      {% set active_page = 'task' %}
 


{% block content %}
<br><br>
<div class="judul">
  <center>AVAILABLE TASK</center>
</div>


{% if listAvailTask %}
            <input type="text" id="myInput" onkeyup="myFunction()" placeholder="Search report name.." title="Type in a name">
                            <br><br>


<center>
<form action="/detailRequest" method="post">

                <table id="list">
                  <tr>
                    <th>Request Code</th>
                    <th>Report Title</th>
                    <th>Request Name</th>
                    <th>Department</th>
                    <th>Request Date</th>
                    <th>Deadline</th>
                    <th>Priority</th>
                    <th></th>
                  </tr>
                  {% for row in listAvailTask %}
                  <tr >
                    <td>{{row['requestId']}}</td>
                    <td>{{row['requestJudul']}}</td>
                    <td>{{row['userNama']}}</td>
                    <td>{{row['requestKategori']}}</td>
                    <td>{{row['requestTanggal']}}</td>
                    <td>{{row['requestDeadline']}}</td>    
                    {% if row['requestPrioritas'] == '2' %}
                    <td> <a class ="pri3"> </a></td>
                    {% else %}
                    <td> <a class ="pri1"> </a></td>
                    {% endif %}

<!-- CODINGAN BARU -->
                    {% for x in taskProg %}
                    

                    {% if x['taskNormal'] >= '2' and row['requestPrioritas'] == '2' %}
                      <td> <button class="submit2" name = 'buttonDetail' value="{{row['requestId']}}" disabled="">Select
                      </button></td>

                    {% elif x['taskImportant'] == '3' and row['requestPrioritas'] == '1' %}
                      <td> <button class="submit2" name = 'buttonDetail' value="{{row['requestId']}}" disabled="">Select
                      </button></td>

                    {% else %}
                      <td> <button class="submit" name = 'buttonDetail' value="{{row['requestId']}}">Select
                      </button></td>
                      
                    {% endif %}
            
                    {% endfor %}
                    
                  </tr>{% endfor %}
                 
                </table>
</form>

                               <!--  <br><br><br>
                <h2>__________________________________________________________________________</h2>
                                <br><br><br> -->
        </center>

{% else %}
<p>Tidak ada task yang tersedia untuk saat ini </p>

{% endif %}

<br><br><br>

    
        <!-- DIV / -->
      







</div>  <!-- DIV / -->
{% endblock %}
    </body>


{% block script %}
<script type="text/javascript">
// Get the modal

var btnProcess;
var modalItem;

// // When the user clicks on <span> (x), close the modal
function  closeModal() {
  modalItem.style.display = "none";
}

// // When the user clicks anywhere outside of the modal, close it
window.onclick = function(event) {
  if (event.target == modalItem) {
    modalItem.style.display = "none";
  }
}

function show_modal(modalId){

  modalItem = document.getElementById(modalId);
  modalItem.style.display = 'block';
}
function click_process(processId){
  show_modal('modal'+processId);
  //alert('modal'+processId);

}





//           BUAT FITUR SEARCH LAPORAN
function myFunction() {
  var input, filter, table, tr, td, i, txtValue;
  input = document.getElementById("myInput");
  filter = input.value.toUpperCase();
  table = document.getElementById("list");
  tr = table.getElementsByTagName("tr");
  for (i = 0; i < tr.length; i++) {
    td = tr[i].getElementsByTagName("td")[1];
    if (td) {
      txtValue = td.textContent || td.innerText;
      if (txtValue.toUpperCase().indexOf(filter) > -1) {
        tr[i].style.display = "";
      } else {
        tr[i].style.display = "none";
      }
    }       
  }
}

</script>
{% endblock %}
</html>

======================================================ms1.py==============================================================

    @app.route('/reqPrioritas/<request_id>')
    def reqProritas(request_id):
        try: 
            db = databaseCMS.db_request()
        
            cursor = db.cursor()
            cursor.execute(''.join(['SELECT req_prioritas, prog_id FROM t_request WHERE req_id = "'+request_id+'" ']))   
           
            resultPrioritas = cursor.fetchall()

            detailPrioritas = []

            for row in resultPrioritas:
                prioritasDict = {
                'prioritasRequest' : row[0],
                'idProg' : row[1]
                }
                detailPrioritas.append(prioritasDict)

            req_prioritas = json.dumps(detailPrioritas)
            


            return req_prioritas

        except Error as e :
            print("Error while connecting file MySQL", e)
        finally:
                #Closing DB Connection.
                    if(db.is_connected()):
                        cursor.close()
                        db.close()
                    print("MySQL connection is closed")
-------------------------------------------------------------------------

@app.route('/accRequest/<detail>', methods=['POST','GET'])
    def accRequest(detail):
        accReq = datetime.datetime.now()

        detailR = json.loads(detail)

        for x in detailR:
            request_id = detailR['request_id']
            uId = detailR['uId']
            uName = detailR['uName']

        availTask = requests.get('http://127.0.0.1:5001/reqPrioritas/'+request_id)
        availTaskResp = json.dumps(availTask.json())
        loadAvailTask = json.loads(availTaskResp)
        for a in loadAvailTask:
            prioritasRequest = a['prioritasRequest']

        try: 
            db = databaseCMS.db_request()

            cursor = db.cursor()

            cursor.execute('update t_request set req_dateAccept = "'+str(accReq)+'",req_status = "On Process", req_PIC = "'+uName+'", prog_id = "'+uId+'" where req_id = "'+request_id+'"')
            db.commit()

            if (prioritasRequest == "2"):
                cursor.execute(' update m_programmer set prog_taskNormal = prog_taskNormal + 1 where prog_id = "'+uId+'" ')
                db.commit()
            else:
                cursor.execute(' update m_programmer set prog_taskImportant = prog_taskImportant + 1 where prog_id = "'+uId+'" ')
                db.commit()

            print ("Record Updated successfully ")
        except Error as e :
            print("Error while connecting file MySQL", e)
        finally:
                #Closing DB Connection.
                    if(db.is_connected()):
                        cursor.close()
                        db.close()
                    print("MySQL connection is closed")

-------------------------------------------------------------------------

@app.route('/finReq/<kode>', methods=['POST','GET'])
    def finReq(kode):
        
        loadKode = json.loads(kode)
        endDate = datetime.datetime.now()

        for i in loadKode:
            request_id = loadKode['request_id']
            kodLap = loadKode['kode_laporan']


        availTask = requests.get('http://127.0.0.1:5001/reqPrioritas/'+request_id)
        availTaskResp = json.dumps(availTask.json())
        loadAvailTask = json.loads(availTaskResp)
        for a in loadAvailTask:
            prioritasRequest = a['prioritasRequest']
            uId = a['idProg']

        try: 
            db = databaseCMS.db_request()

            cursor = db.cursor()
            cursor.execute(''.join(['UPDATE t_request SET req_status = "Finished"  WHERE req_id = "'+request_id+'"']))            
            db.commit()
            
            cursor.execute('INSERT INTO m_rating VALUES (%s,%s,%s)',(request_id,'0',''))
            db.commit()

            cursor.execute(''.join(['UPDATE t_request SET req_endDate = "'+str(endDate)+'", req_kodeLaporan = "'+kodLap+'"  WHERE req_id = "'+request_id+'"']))            
            db.commit()
            
            if (prioritasRequest == "2"):
                cursor.execute(' update m_programmer set prog_taskNormal = prog_taskNormal - 1 where prog_id = "'+uId+'" ')
                db.commit()
            else:
                cursor.execute(' update m_programmer set prog_taskImportant = prog_taskImportant - 1 where prog_id = "'+uId+'" ')
                db.commit()

            print('Report Finished')
        except Error as e :
            print("Error while connecting file MySQL", e)
        finally:
                #Closing DB Connection.
                    if(db.is_connected()):
                        cursor.close()
                        db.close()
                    print("MySQL connection is closed")    

--------------------------------------------------------------------------

